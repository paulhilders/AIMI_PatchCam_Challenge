"""
extract_validation_images.py: Script that saves a grid of images, extracted from
    the validation_example_indices.pkl file, which was generated by the
    g_densnet_PCAM_extract_sample_images.py script.

Used for the AI for Medical Imaging course at the University of Amsterdam.
"""

import os
import pickle
import numpy as np
import h5py

from PIL import Image, ImageFont, ImageDraw, ImageOps

x_val = h5py.File('../AIMI_PatchCam_Challenge/pcamv1/camelyonpatch_level_2_split_valid_x.h5', 'r')['x']
y_val = h5py.File('../AIMI_PatchCam_Challenge/pcamv1/camelyonpatch_level_2_split_valid_y.h5', 'r')['y'][:, 0, 0, 0]

def save_and_create_grid(samples, label, cols=5, rows=5, border=10):
    # Each grid cell receives enough space for the image of size 96x96 pixels,
    # in addition to a small border.
    cell_size = 96 + border
    grid = Image.new('RGB', size=(rows * (96 + border + 1), cols * (96 + border + 1)))
    grid_w, grid_h = grid.size

    for i, (index, pred_label, true_label) in enumerate(samples):
        img = Image.fromarray(x_val[index])
        img = ImageOps.expand(img, border=border, fill=(255, 255, 255))
        draw = ImageDraw.Draw(img)

        # Annotate the image sample with the predicted and true labels.
        draw.text((border, 0), f"True: {true_label}, Pred: {pred_label}", fill=(0,0,0,255))
        # img.save(os.path.join("val_sample_images", f"val_sample_{label}_{index}_true{y_val[index]}" + ".jpg"))

        grid.paste(img, box=(i % rows * cell_size, i // cols * cell_size))
    grid.save(os.path.join("val_sample_images", f"val_grid_{label}" + ".jpg"))

with open('validation_example_indices.pkl', 'rb') as f:
    easy_samples, tough_samples, misleading_samples = pickle.load(f)

    save_and_create_grid(easy_samples, "EASY")
    save_and_create_grid(tough_samples, "TOUGH")
    save_and_create_grid(misleading_samples, "MISLEADING")

